"use client";
import React, { useState } from "react";
import { FcSearch } from "react-icons/fc";
import { useTranslation } from "react-i18next";

const Dropdown = ({ options, selected, setSelected, placeholder }) => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => setIsOpen(!isOpen);

  const handleOptionClick = (option) => {
    setSelected(option);
    setIsOpen(false);
  };

  return (
    <div className="relative w-full md:w-1/3">
      <button
        onClick={toggleMenu}
        className="flex items-center w-full py-3 text-center rounded-full bg-white shadow-md hover:shadow-lg transition-shadow duration-300 font-bold text-xl justify-center text-gray-600 hover:bg-gray-100 focus:outline-none"
      >
        {selected || <span className="text-sm md:text-lg">{placeholder}</span>}
      </button>

      {isOpen && (
        <div className="absolute mt-2 w-full bg-white border border-gray-200 rounded-lg shadow-lg max-h-56 overflow-y-auto z-[9999]">
          <ul className="py-1">
            {options.map((option, index) => (
              <li key={index}>
                <button
                  onClick={() => handleOptionClick(option)}
                  className="block px-6 py-4 text-[17px] text-gray-700 hover:bg-blue-100 w-full text-right transition-colors duration-200"
                >
                  {option}
                </button>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

const Search = () => {
  const { t } = useTranslation();
  const [selectedSpecialty, setSelectedSpecialty] = useState("");
  const [selectedProgram, setSelectedProgram] = useState("");
  const [selectedLang, setSelectedLang] = useState("");

  const specialties = [
    t("ุงูุทุจ ุงูุจุดุฑู"),
    t("ุงูุตูุฏูุฉ"),
    t("ุทุจ ุงูุงุณูุงู"),
    t("ุงูุนูุงุฌ ุงูุทุจูุนู"),
    t("ุงูุชูุฑูุถ"),
    t("ุงูุชุฎุฏูุฑ"),
    t("ุงูุงุณุนุงูุงุช ุงูุงูููุฉ"),
    t("ุงูุชุบุฐูุฉ"),
    t("ุงูููุฏุณุฉ ุงูุทุจูุฉ"),
    t("ููุฏุณุฉ ุงููุนูุงุฑ"),
    t("ููุฏุณุฉ ุงููููุงุชุฑูููุณ"),
    t("ููุฏุณุฉ ุงููููุงูููุง"),
    t("ููุฏุณุฉ ุงูุชุตููู ุงูุฏุงุฎูู"),
    t("ุงูููุฏุณุฉ ุงูุตูุงุนูุฉ"),
    t("ููุฏุณุฉ ุงูุณูุงุฑุงุช"),
    t("ููุฏุณุฉ ุงููุถุงุก"),
    t("ุงูููุฏุณุฉ ุงููููุงุฆูุฉ"),
    t("ููุฏุณุฉ ุงูุจุฑูุฌูุงุช"),
    t("ููุฏุณุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู"),
    t("ููุฏุณุฉ ุงูููุฑุจุงุก ูุงูุงูุชุฑูููุงุช"),
    t("ููุฏุณุฉ ุงูููุงุธุฑ ุงูุทุจูุนูุฉ"),
    t("ุงูุงุฏุงุฑุฉ ุงูููุฏุณูุฉ"),
    t("ุงุฏุงุฑุฉ ุงูุงุนูุงู"),
    t("ุงุฏุงุฑู ุงูุฎุฏูุงุช ุงูููุฌุณุชูุฉ"),
    t("ุงูู ุงููุนูููุงุช"),
    t("ูุธู ุงููุนูููุงุช ุงูุงุฏุงุฑูุฉ"),
    t("ุงููุณุฑุญ"),
    t("ุงูููุณููู"),
    t("ูุนูู ุงูุฑูุงุถูุงุช"),
    t("ูุนูู ุงููููุงุก"),
    t("ุชูููุฉ ุงูุทูู"),
    t("ุงูุชุฑุฌูุฉ"),
    t("ุงูุตุญุงูุฉ"),
    t("ุงูุฏุนุงูุฉ ูุงูุงุนูุงู"),
    t("ุชุตููู ุงูุงุฒูุงุก"),
    t("ุชุตููู ุงูุฌุฑุงููู"),
    t("ุงูุทูุฑุงู"),
  ];

  const programs = [
    t("ุจุฑูุงูุฌ ุงููุงุฌุณุชูุฑ"),
    t("ุจุฑูุงูุฌ ุงูุจูุงููุฑููุณ"),
    t("ุจุฑูุงูุฌ ุงูุฏุจููู"),
    t("ุจุฑูุงูุฌ ุงูุฏูุชูุฑุงุฉ"),
  ];
  const lang = [t("ุงููุบุฉ ุงูุชุฑููุฉ"), t("ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ")];

  return (
    <>
      <div className="flex mb-24 flex-col md:flex-row mt-9 gap-6 items-center rounded-full w-11/12 md:w-10/12 h-auto md:h-28 z-50 border-4 border-[#7a0066c6] opacity-95 mx-auto py-12 px-6 md:px-16 bg-[#dddddd31] shadow-2xl">
        <Dropdown
          options={programs}
          selected={selectedProgram}
          setSelected={setSelectedProgram}
          placeholder={t("ุงุจุญุซ ุนู ุงูุจุฑูุงูุฌ ุงูุฏุฑุงุณู...๐")}
        />
        <Dropdown
          options={lang}
          selected={selectedLang}
          setSelected={setSelectedLang}
          placeholder={t("ุงุจุญุซ ุนู ูุบุฉ ุงูุฏุฑุงุณุฉ...๐")}
        />
        <Dropdown
          options={specialties}
          selected={selectedSpecialty}
          setSelected={setSelectedSpecialty}
          placeholder={t("ุงุจุญุซ ุนู ุชุฎุตุตู...๐")}
        />
        <b className="text-[#7a0066c6] h-16 text-5xl">|</b>
        <a
          href={
            selectedProgram && selectedLang && selectedSpecialty
              ? "../search"
              : "#"
          }
          className={`bg-white rounded-full p-2 ${
            selectedProgram && selectedLang && selectedSpecialty
              ? "hover:bg-blue-500 hover:text-white transition-colors duration-300"
              : "opacity-50 cursor-not-allowed"
          }`}
          onClick={(e) => {
            if (!selectedProgram || !selectedLang || !selectedSpecialty) {
              e.preventDefault();
              alert(
                t(
                  "ูุฑุฌู ุงุฎุชูุงุฑ ุงูุจุฑูุงูุฌ ุงูุฏุฑุงุณูุ ูุบุฉ ุงูุฏุฑุงุณุฉุ ูุงูุชุฎุตุต ูุจู ุงูุจุญุซ!"
                )
              );
            }
          }}
        >
          <FcSearch className="size-16 px-2 animate-bounce mt-2 hover:cursor-pointer" />
        </a>
      </div>
    </>
  );
};

export default Search;
